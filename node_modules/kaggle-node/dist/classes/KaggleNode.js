"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KaggleNode = void 0;
const KaggleNodeClient_1 = require("./KaggleNodeClient");
const DatasetHandle_1 = require("./DatasetHandle");
const DatasetQuery_1 = require("./DatasetQuery");
class KaggleNode {
    constructor(config) {
        this.datasets = {
            search: (options) => {
                let query = new DatasetQuery_1.DatasetQuery(options);
                return this.client.get('datasets/list', {
                    params: query.params()
                });
            },
            view: (handleStr) => {
                let handle = new DatasetHandle_1.DatasetHandle(handleStr);
                return this.client.get(handle.getViewRoute());
            },
            list: (handleStr) => {
                let handle = new DatasetHandle_1.DatasetHandle(handleStr);
                return this.client.get(handle.getListRoute());
            },
            download: (handleStr, path) => {
                let handle = new DatasetHandle_1.DatasetHandle(handleStr);
                return this.client.get(handle.getDownloadRoute(path != null
                    ? { ['file_name']: path }
                    : undefined));
            }
        };
        this.client = new KaggleNodeClient_1.KaggleNodeClient(config === null || config === void 0 ? void 0 : config.credentials, config === null || config === void 0 ? void 0 : config.clientOptions);
    }
}
exports.KaggleNode = KaggleNode;
//# sourceMappingURL=KaggleNode.js.map